from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.enums import TakeScreenshotConditionType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: VLFsports
    Package: TestProject.Generated.Tests.VLFsports
    Test: CP-03B
    Generated by: Carlos Leonardo (thorin.1620@gmail.com)
    Generated on 04/04/2022, 03:52:51
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="w0FakVRmj9dNXYcKJPUnZ09uKCtFIu24ziWZm9gCuAE",
                              project_name="VLFsports",
                              job_name="CP-03B")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Filtrar la búsqueda de productos por parámetros."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://vlfsports.odoo.com"
    Clavesprecio = "Balon"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Tienda'
    tienda = driver.find_element(By.XPATH,
                                 "//span[. = 'Tienda']")
    tienda.click()

    # 3. Click 'search'
    search = driver.find_element(By.CSS_SELECTOR,
                                 "[name='search']")
    search.click()

    # 4. Type '{Clavesprecio}' in 'search'
    step_settings = StepSettings(
        screenshot_condition=TakeScreenshotConditionType.Always)
    with DriverStepSettings(driver, step_settings):
        search = driver.find_element(By.CSS_SELECTOR,
                                     "[name='search']")
        search.send_keys(f'{Clavesprecio}')

    # 5. Send 'ENTER' key(s)
    ActionChains(driver).send_keys(Keys.ENTER).perform()

    # 6. Click 'Featured'
    featured = driver.find_element(By.XPATH,
                                   "//a[. = '\n                    \n                            Featured\n                    \n                    \n                ']")
    featured.click()

    # 7. Click 'Price - Low to High'
    step_settings = StepSettings(
        screenshot_condition=TakeScreenshotConditionType.Always)
    with DriverStepSettings(driver, step_settings):
        price_low_to_high = driver.find_element(By.XPATH,
                                                "//span[. = 'Price - Low to High']")
        price_low_to_high.click()
